<?php

/**
 * @file
 * Drupal site-specific configuration file.
 *
 * {{ ansible_managed }}
 */

/**
 * Database settings:
 *
 * The $databases array specifies the database connection or
 * connections that Drupal may use.  Drupal is able to connect
 * to multiple databases, including multiple types of databases,
 * during the same request.
 */
$databases = array();
{% set keys = [] %}
{% for key, value in item.value.databases.iteritems() recursive %}
{% set ignore = keys.append(key) %}
{% set outer_loop = loop %}
{% if value is mapping %}
{{ outer_loop(value.iteritems()) }}
{% elif value is string %}
$databases["{{ keys|join('"]["') }}"] = "{{ value }}";
{% elif value is sequence %}
$databases["{{ keys|join('"]["') }}"] = array(
{% for inner_value in value %}
{% if inner_value is string %}
'{{ inner_value }}'
{% elif inner_value is iterable %}
{{ outer_loop(inner_value) }}
{% endif %}
{% if not loop.last %}, {% endif %}
{% endfor %}
);
{% endif %}
{% set ignore = keys.pop() %}
{% endfor %}

/**
 * Access control for update.php script.
 *
 * If you are updating your Drupal installation using the update.php script but
 * are not logged in using either an account with the "Administer software
 * updates" permission or the site maintenance account (the account that was
 * created during installation), you will need to modify the access check
 * statement below. Change the FALSE to a TRUE to disable the access check.
 * After finishing the upgrade, be sure to open this file again and change the
 * TRUE back to a FALSE!
 */
$update_free_access = FALSE;

/**
 * Salt for one-time login links and cancel links, form tokens, etc.
 *
 * This variable will be set to a random value by the installer. All one-time
 * login links will be invalidated if the value is changed. Note that if your
 * site is deployed on a cluster of web servers, you must ensure that this
 * variable has the same value on each server. If this variable is empty, a hash
 * of the serialized database credentials will be used as a fallback salt.
 *
 * For enhanced security, you may set this variable to a value using the
 * contents of a file outside your docroot that is never saved together
 * with any backups of your Drupal files and database.
 *
 * Example:
 *   $drupal_hash_salt = file_get_contents('/home/example/salt.txt');
 *
 */
$drupal_hash_salt = '{{ item.value.hash_salt }}';

/**
 * Base URL (optional).
 *
 * If Drupal is generating incorrect URLs on your site, which could
 * be in HTML headers (links to CSS and JS files) or visible links on pages
 * (such as in menus), uncomment the Base URL statement below (remove the
 * leading hash sign) and fill in the absolute URL to your Drupal installation.
 *
 * You might also want to force users to use a given domain.
 * See the .htaccess file for more information.
 *
 * Examples:
 *   $base_url = 'http://www.example.com';
 *   $base_url = 'http://www.example.com:8888';
 *   $base_url = 'http://www.example.com/drupal';
 *   $base_url = 'https://www.example.com:8888/drupal';
 *
 * It is not allowed to have a trailing slash; Drupal will add it
 * for you.
 */
# $base_url = 'http://www.example.com';  // NO trailing slash!
{% if item.value.base_url is defined %}
$base_url = "{{ item.value.base_url }}";
{% endif %}

/**
 * PHP settings:
 *
 * To see what PHP settings are possible, including whether they can be set at
 * runtime (by using ini_set()), read the PHP documentation:
 * http://www.php.net/manual/ini.list.php
 * See drupal_environment_initialize() in includes/bootstrap.inc for required
 * runtime settings and the .htaccess file for non-runtime settings. Settings
 * defined there should not be duplicated here so as to avoid conflict issues.
 */
{% for key, value in ((drupal_settings_default.php_ini|default({})).items() + (item.value.php_ini|default({})).items()) %}
ini_set('{{ key }}', '{{ value }}');
{% endfor %}

{% if item.value.cookie_domain|default(False) %}
/**
 * Drupal automatically generates a unique session cookie name for each site
 * based on its full domain name. If you have multiple domains pointing at the
 * same Drupal site, you can either redirect them all to a single domain (see
 * comment in .htaccess), or uncomment the line below and specify their shared
 * base domain. Doing so assures that users remain logged in as they cross
 * between your various domains. Make sure to always start the $cookie_domain
 * with a leading dot, as per RFC 2109.
 */
$cookie_domain = "{{ item.value.cookie_domain }}";
{% endif %}

/**
 * Variable overrides.
 */
{% set keys = [] %}
{% for key, value in ((drupal_settings_default.conf|default({})).items() + (item.value.conf|default({})).items()) recursive %}
{% set ignore = keys.append(key) %}
{% set outer_loop = loop %}
{% if value is mapping %}
{{ outer_loop(value.iteritems()) }}
{% elif value is string %}
$conf["{{ keys|join('"]["') }}"] = "{{ value }}";
{% elif value is sequence %}
$conf["{{ keys|join('"]["') }}"] = array(
{% for inner_value in value %}
{% if inner_value is string %}
'{{ inner_value }}'
{% elif inner_value is iterable %}
{{ outer_loop(inner_value) }}
{% endif %}
{% if not loop.last %}, {% endif %}
{% endfor %}
);
{% endif %}
{% set ignore = keys.pop() %}
{% endfor %}

{% if item.value.fast_404|default(False) %}
/**
 * Return a fast 404 page earlier for missing pages (as soon as settings.php is
 * loaded).
 */
drupal_fast_404();
{% endif %}

{% for file in (drupal_settings_default.includes|default([]) + (item.value.includes|default([]))) %}
/**
 * Include some custom PHP scripts if needed.
 */
require_once '{{ file }}';
{% endfor %}
